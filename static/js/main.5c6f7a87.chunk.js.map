{"version":3,"sources":["ImageGallery/ImageGallery.module.css","Loader/Loader.module.css","ImageError/ImageError.module.css","ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","Modal/Modal.module.css","App.module.css","Button/Button.module.css","Searchbar/Searchbar.module.css","Searchbar/Searchbar.jsx","services/Service-api.js","ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","Loader/Loader.jsx","ImageError/jW.gif","ImageError/ImageError.jsx","Modal/Modal.jsx","Button/Button.jsx","ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["module","exports","Searchbar","onFormSubmit","useState","searchQuery","setSearchQuery","currentPage","setCurrentPage","className","styles","onSubmit","e","preventDefault","trim","toLowerCase","toast","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","fetchImage","query","axios","get","then","response","propTypes","PropTypes","string","ImageGalleryItem","map","image","src","webformatURL","alt","largeImageURL","ImageGalleryItemImage","id","Loader","LoaderContainer","hourglass","ImageError","error","message","queryName","sadImage","Modal","onClose","children","onKeyDown","code","useEffect","window","addEventListener","Overlay","onClick","event","target","Button","Status","ImageGallery","queryCurrentPage","queryArr","setQueryArr","setError","status","setStatus","showModal","setShowModal","setLargeImageURL","isFirstRender","useRef","fetchImages","API","images","data","hits","length","scrollTo","top","document","documentElement","scrollHeight","behavior","onGalleryItemClick","catch","nodeName","toggleModal","current","App","setQueryCurrentPage","searchSubmitQuery","autoClose","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5c6f7a87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1mv58\",\"image\":\"ImageGallery_image__1AgXG\",\"Loader\":\"ImageGallery_Loader__o_viL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoaderContainer\":\"Loader_LoaderContainer__4S_SO\",\"searchQuery\":\"Loader_searchQuery__1uHID\",\"hourglass\":\"Loader_hourglass__26UcI\",\"flip\":\"Loader_flip__32YyY\",\"fill\":\"Loader_fill__2z82R\",\"glare\":\"Loader_glare__1wFFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ImageError_error__UiY89\",\"queryName\":\"ImageError_queryName__1s2Dc\",\"ImageError\":\"ImageError_ImageError__HH8hI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1XfAl\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3J18y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__HHKMb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__H34LH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__39RVB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1dkT6\",\"ImageGallery\":\"Searchbar_ImageGallery__1rENI\",\"ImageGalleryItem\":\"Searchbar_ImageGalleryItem__20RDe\",\"ImageGalleryItem_Image\":\"Searchbar_ImageGalleryItem_Image__10OIo\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport styles from './Searchbar.module.css';\r\nexport default function Searchbar({ onFormSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const onQueryChange = e => {\r\n    setSearchQuery(e.currentTarget.value);\r\n  };\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (searchQuery.trim() === '') {\r\n      toast('Type something to find.');\r\n      return;\r\n    }\r\n    onFormSubmit(searchQuery.toLowerCase(), currentPage);\r\n    setSearchQuery('');\r\n    setCurrentPage(1);\r\n  };\r\n  return (\r\n    <header className={styles.Searchbar}>\r\n      <form onSubmit={onSubmit} className={styles.SearchForm}>\r\n        <button type=\"submit\" className={styles.SearchFormButton}>\r\n          <span className={styles.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n        <input\r\n          className={styles.SearchFormInput}\r\n          value={searchQuery}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={onQueryChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n// class Searchbar extends Component {\r\n//   state = { searchQuery: '', currentPage: 1 };\r\n\r\n//   onQueryChange = e => {\r\n//     this.setState({ searchQuery: e.currentTarget.value });\r\n//   };\r\n\r\n//   onSubmit = e => {\r\n//     e.preventDefault();\r\n//     if (this.state.searchQuery.trim() === '') {\r\n//       toast('Type something to find.');\r\n//       return;\r\n//     }\r\n//     this.props.onSubmit(\r\n//       this.state.searchQuery.toLowerCase(),\r\n//       this.state.currentPage,\r\n//     );\r\n//     this.setState({ searchQuery: '', currentPage: 1 });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <header className={styles.Searchbar}>\r\n//         <form onSubmit={this.onSubmit} className={styles.SearchForm}>\r\n//           <button type=\"submit\" className={styles.SearchFormButton}>\r\n//             <span className={styles.SearchFormButtonLabel}>Search</span>\r\n//           </button>\r\n\r\n//           <input\r\n//             className={styles.SearchFormInput}\r\n//             value={this.state.searchQuery}\r\n//             type=\"text\"\r\n//             autoComplete=\"off\"\r\n//             autoFocus\r\n//             placeholder=\"Search images and photos\"\r\n//             onChange={this.onQueryChange}\r\n//           />\r\n//         </form>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n// export default Searchbar;\r\nSearchbar.propTypes = {\r\n  onFormSubmit: PropTypes.func,\r\n};\r\n","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction fetchImage(query, currentPage) {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?key=18968535-a98ecca7bd1b0403c78b07ef3&q=${query}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response);\r\n}\r\nexport default fetchImage;\r\nfetchImage.propTypes = {\r\n  query: PropTypes.string,\r\n  searchQuery: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ImageGalleryItem.module.css';\r\nconst ImageGalleryItem = ({ query }) => {\r\n  const imageData = query;\r\n  return imageData.map(image => (\r\n    <li key={image.id} className={styles.ImageGalleryItem}>\r\n      <img\r\n        src={image.webformatURL}\r\n        alt={image.largeImageURL}\r\n        className={styles.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  ));\r\n};\r\nexport default ImageGalleryItem;\r\nImageGalleryItem.propTypes = {\r\n  query: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Loader.module.css';\r\nexport default function Loader({ searchQuery }) {\r\n  return (\r\n    <div className={styles.LoaderContainer}>\r\n      <p>\r\n        Подождите, идет загрузка изображений по запросу{' '}\r\n        <span className={styles.searchQuery}>{searchQuery}</span>\r\n      </p>\r\n      <div className={styles.hourglass}></div>\r\n    </div>\r\n  );\r\n}\r\nLoader.propTypes = {\r\n  searchQuery: PropTypes.string,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/jW.1da8fd95.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ImageError.module.css';\r\nimport sadImage from './jW.gif';\r\nexport default function ImageError({ error, searchQuery }) {\r\n  return error ? (\r\n    <div>{error.message}</div>\r\n  ) : (\r\n    <div className={styles.error}>\r\n      Нет картинок по запросу{' '}\r\n      <span className={styles.queryName}>{searchQuery}</span>\r\n      <img src={sadImage} alt=\"\" className={styles.ImageError} />\r\n    </div>\r\n  );\r\n}\r\nImageError.propTypes = {\r\n  error: PropTypes.object,\r\n  searchQuery: PropTypes.string,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.css';\r\nexport default function Modal({ onClose, children }) {\r\n  const onKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n  const onBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', onKeyDown);\r\n  });\r\n\r\n  return (\r\n    <div className={styles.Overlay} onClick={onBackdropClick}>\r\n      <div className={styles.Modal}>{children}</div>\r\n    </div>\r\n  );\r\n}\r\n// export default class Modal extends Component {\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.onKeyDown);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.onKeyDown);\r\n//   }\r\n\r\n//   onKeyDown = e => {\r\n//     if (e.code === 'Escape') {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n\r\n//   onBackdropClick = event => {\r\n//     if (event.currentTarget === event.target) {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className={styles.Overlay} onClick={this.onBackdropClick}>\r\n//         <div className={styles.Modal}>{this.props.children}</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  children: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className={styles.Button}>\r\n      Загрузить еще\r\n    </button>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ImageGallery.module.css';\r\nimport API from '../services/Service-api';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport Loader from '../Loader';\r\nimport ImageError from '../ImageError';\r\nimport Modal from '../Modal';\r\nimport Button from '../Button';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\nconst ImageGallery = ({ searchQuery, queryCurrentPage }) => {\r\n  const [queryArr, setQueryArr] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageURL, setLargeImageURL] = useState('');\r\n  const isFirstRender = useRef(true);\r\n  const fetchImages = () => {\r\n    API(searchQuery, currentPage)\r\n      .then(query => {\r\n        const images = query.data.hits;\r\n        if (!images.length) {\r\n          setQueryArr(queryArr);\r\n          setStatus(Status.REJECTED);\r\n        } else {\r\n          setQueryArr([...queryArr, ...images]);\r\n          setStatus(Status.RESOLVED);\r\n          setCurrentPage(currentPage + 1);\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n          window.addEventListener('click', onGalleryItemClick);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  };\r\n  const onGalleryItemClick = event => {\r\n    if (event.target.nodeName !== 'IMG') {\r\n      return;\r\n    }\r\n    setLargeImageURL(event.target.alt);\r\n    toggleModal();\r\n  };\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n    setStatus(Status.PENDING);\r\n    setQueryArr([]);\r\n    setCurrentPage(queryCurrentPage);\r\n    fetchImages();\r\n  }, [queryCurrentPage, searchQuery]);\r\n\r\n  if (status === Status.IDLE) {\r\n    return <div>Введите текст запроса.</div>;\r\n  }\r\n\r\n  if (status === Status.PENDING) {\r\n    return (\r\n      <div className={styles.Loader}>\r\n        <Loader searchQuery={searchQuery} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === Status.REJECTED) {\r\n    return <ImageError error={error} searchQuery={searchQuery} />;\r\n  }\r\n\r\n  if (status === Status.RESOLVED) {\r\n    return (\r\n      <ul className={styles.ImageGallery}>\r\n        <ImageGalleryItem query={queryArr} />\r\n        {showModal && (\r\n          <Modal onClose={toggleModal}>\r\n            <img src={largeImageURL} alt=\"\" className={styles.image} />\r\n          </Modal>\r\n        )}\r\n        <Button onClick={fetchImages} />\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n// class ImageGallery extends Component {\r\n//   state = {\r\n//     query: [],\r\n//     error: null,\r\n//     status: Status.IDLE,\r\n//     currentPage: 1,\r\n//     showModal: false,\r\n//     largeImageURL: '',\r\n//   };\r\n\r\n//   fetchImages = () => {\r\n//     API(this.props.searchQuery, this.state.currentPage)\r\n//       .then(query => {\r\n//         const images = query.data.hits;\r\n//         if (!images.length) {\r\n//           this.setState({ query, status: Status.REJECTED });\r\n//         } else {\r\n//           this.setState(prevState => ({\r\n//             query: [...prevState.query, ...images],\r\n//             status: Status.RESOLVED,\r\n//             currentPage: prevState.currentPage + 1,\r\n//           }));\r\n//           window.scrollTo({\r\n//             top: document.documentElement.scrollHeight,\r\n//             behavior: 'smooth',\r\n//           });\r\n//           window.addEventListener('click', this.onGalleryItemClick);\r\n//         }\r\n//       })\r\n//       .catch(error => this.setState({ error, status: Status.REJECTED }));\r\n//   };\r\n//   onGalleryItemClick = event => {\r\n//     if (event.target.nodeName !== 'IMG') {\r\n//       return;\r\n//     }\r\n//     this.setState({ largeImageURL: event.target.alt });\r\n//     this.toggleModal();\r\n//   };\r\n//   toggleModal = () => {\r\n//     this.setState(({ showModal }) => ({\r\n//       showModal: !showModal,\r\n//     }));\r\n//   };\r\n//   componentDidUpdate = (prevProps, prevState) => {\r\n//     const prevQuery = prevProps.searchQuery;\r\n//     const nextQuery = this.props.searchQuery;\r\n//     if (prevQuery !== nextQuery) {\r\n//       this.setState({\r\n//         status: Status.PENDING,\r\n//         query: [],\r\n//         currentPage: this.props.queryCurrentPage,\r\n//       });\r\n//       this.fetchImages();\r\n//     }\r\n//   };\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('click', this.onGalleryItemClick);\r\n//   }\r\n//   render() {\r\n//     const { query, error, status } = this.state;\r\n//     const { searchQuery } = this.props;\r\n\r\n//     if (status === Status.IDLE) {\r\n//       return <div>Введите текст запроса.</div>;\r\n//     }\r\n\r\n//     if (status === Status.PENDING) {\r\n//       return (\r\n//         <div className={styles.Loader}>\r\n//           <Loader searchQuery={searchQuery} />\r\n//         </div>\r\n//       );\r\n//     }\r\n\r\n//     if (status === Status.REJECTED) {\r\n//       return <ImageError error={error} searchQuery={searchQuery} />;\r\n//     }\r\n\r\n//     if (status === Status.RESOLVED) {\r\n//       return (\r\n//         <ul className={styles.ImageGallery}>\r\n//           <ImageGalleryItem query={query} />\r\n//           {this.state.showModal && (\r\n//             <Modal onClose={this.toggleModal}>\r\n//               <img\r\n//                 src={this.state.largeImageURL}\r\n//                 alt=\"\"\r\n//                 className={styles.image}\r\n//               />\r\n//             </Modal>\r\n//           )}\r\n//           <Button onClick={this.fetchImages} />\r\n//         </ul>\r\n//       );\r\n//     }\r\n//   }\r\n// }\r\nexport default ImageGallery;\r\nImageGallery.propTypes = {\r\n  currentPage: PropTypes.number,\r\n  searchQuery: PropTypes.string,\r\n};\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ToastContainer } from 'react-toastify';\n\nimport styles from './App.module.css';\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery';\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [queryCurrentPage, setQueryCurrentPage] = useState(1);\n  const onFormSubmit = searchSubmitQuery => {\n    setSearchQuery(searchSubmitQuery);\n    setQueryCurrentPage(1);\n  };\n  return (\n    <div className={styles.App}>\n      <Searchbar onFormSubmit={onFormSubmit} />\n      <ImageGallery\n        searchQuery={searchQuery}\n        queryCurrentPage={queryCurrentPage}\n      />\n\n      <ToastContainer autoClose={3000} position=\"top-center\" />\n    </div>\n  );\n};\n// class App extends Component {\n//   state = {\n//     searchQuery: '',\n//     currentPage: 1,\n//   };\n//   onFormSubmit = searchQuery => {\n//     this.setState({ searchQuery, currentPage: 1 });\n//   };\n\n//   render() {\n//     return (\n//       <div className={styles.App}>\n//         <Searchbar onFormSubmit={this.onFormSubmit} />\n//         <ImageGallery\n//           searchQuery={this.state.searchQuery}\n//           currentPage={this.state.currentPage}\n//         />\n\n//         <ToastContainer autoClose={3000} position=\"top-center\" />\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\nApp.propTypes = {\n  searchQuery: PropTypes.string,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}